{"ast":null,"code":"var _jsxFileName = \"/home/ciro/Escritorio/Ciro/videogames-main/client-videogames/src/components/SelectorForm.jsx\";\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectorForm = _ref => {\n  let {\n    selectors,\n    input,\n    setInput\n  } = _ref;\n  const platforms = [\"Xbox One\", \"Xbox Series S/X\", \"Xbox 360\", \"PlayStation 3\", \"PlayStation 4\", \"PlayStation 5\", \"PS Vita\", \"Nintendo Switch\", \"PC\", \"Linux\", \"macOS\", \"iOS\", \"Android\"];\n\n  function handleSelectGenres(e) {\n    if (input.genres.includes(e.target.value)) {\n      let gen = input.genres.filter(el => el !== e.target.value);\n      console.log(\"Saco el \", e.target.value);\n      setInput({ ...input,\n        genres: gen\n      });\n    } else {\n      setInput({ ...input,\n        genres: [...input.genres, e.target.value]\n      });\n    }\n  }\n\n  function handleSelectPlatforms(e) {\n    if (input.platforms.includes(e.target.value)) {\n      let plat = input.platforms.filter(el => el !== e.target.value);\n      console.log(\"Saco el \", e.target.value);\n      setInput({ ...input,\n        platforms: plat\n      });\n    } else {\n      setInput({ ...input,\n        platforms: [...input.platforms, e.target.value]\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: selectors ? selectors.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gen\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: item.name,\n            name: \"genres\",\n            onChange: e => handleSelectGenres(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this), \"  \" + item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this);\n    }) : platforms.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plat\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: item,\n            name: \"platforms\",\n            onChange: e => handleSelectPlatforms(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this), \"  \" + item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SelectorForm;\nexport default SelectorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectorForm\");","map":{"version":3,"names":["React","Fragment","SelectorForm","selectors","input","setInput","platforms","handleSelectGenres","e","genres","includes","target","value","gen","filter","el","console","log","handleSelectPlatforms","plat","map","item","i","name"],"sources":["/home/ciro/Escritorio/Ciro/videogames-main/client-videogames/src/components/SelectorForm.jsx"],"sourcesContent":["import React, { Fragment } from 'react';\n\nconst SelectorForm = ({selectors, input, setInput}) => {\n    const platforms = [\n        \"Xbox One\",\n        \"Xbox Series S/X\",\n        \"Xbox 360\",\n        \"PlayStation 3\",\n        \"PlayStation 4\",\n        \"PlayStation 5\",\n        \"PS Vita\",\n        \"Nintendo Switch\",\n        \"PC\",\n        \"Linux\",\n        \"macOS\",\n        \"iOS\",\n        \"Android\"\n    ];\n\n    function handleSelectGenres(e) {\n        if ( input.genres.includes(e.target.value) ) {\n            let gen = input.genres.filter(el=> el !== e.target.value)\n            console.log(\"Saco el \",e.target.value)\n            setInput({\n                ...input,\n                genres: gen\n            })\n        } else {\n            setInput({\n                ...input,\n                genres: [...input.genres, e.target.value],\n            })\n        }\n    }\n    function handleSelectPlatforms(e) {\n        if(input.platforms.includes(e.target.value)){\n            let plat = input.platforms.filter(el=> el !== e.target.value)\n            console.log(\"Saco el \",e.target.value)\n            setInput({\n                ...input,\n                platforms: plat\n            })\n        } else {\n            setInput({\n                ...input,\n                platforms: [...input.platforms, e.target.value]\n            })\n        }\n    }\n\n    return (\n        <Fragment>\n            {\n                selectors ?\n                (\n                    selectors.map((item, i) => {\n                        return (\n                            \n                            <div className='gen'  key={i}>\n                                <label>\n                                    <input \n                                        type=\"checkbox\"\n                                        value={item.name}\n                                        name=\"genres\"\n                                        onChange={(e) => handleSelectGenres(e)}\n                                    />\n                                        {\"  \"+item.name}\n                                    </label>\n                                </div>\n    \n                        )\n                    })\n                )\n                :\n                (\n                    platforms.map((item, i) => {\n                        return (\n                            \n                            <div className='plat'  key={i}>\n                                <label>\n                                    <input \n                                        type=\"checkbox\"\n                                        value={item}\n                                        name=\"platforms\"\n                                        onChange={(e) => handleSelectPlatforms(e)}\n                                    />\n                                        {\"  \"+item}\n                                    </label>\n                                </div>\n    \n                        )\n                    })\n                )\n            }\n        </Fragment>\n    )\n}\n\nexport default SelectorForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}